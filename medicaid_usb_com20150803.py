import usb.core
import usb.util
from time import sleep


#http://pyvideo.org/speaker/274/nicholas-waite
 
def main():
    device = usb.core.find(idVendor = 0x0403, idProduct = 0x6001)
     
    if device.is_kernel_driver_active(0) == True:
        device.detach_kernel_driver(0)
        
    else:
        pass
    
    device.set_configuration()
    
    
    device.ctrl_transfer(0x40,0x04,0x07,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x02,0x00,0x00)
    device.ctrl_transfer(0x40,0x03,0xc4,0x09)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x00,0x00,0x00)
    device.ctrl_transfer(0x40,0x04,0x07,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x02,0x00,0x00)
    device.ctrl_transfer(0x40,0x03,0xc4,0x09)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x02,0x00,0x00)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x03,0xc4,0x09)
    device.ctrl_transfer(0x40,0x04,0x07,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x03,0xc4,0x09)
    device.ctrl_transfer(0x40,0x04,0x07,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x03,0xc4,0x09)
    device.ctrl_transfer(0x40,0x04,0x07,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x02,0x00,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x00,0x00,0x00)
    device.ctrl_transfer(0x40,0x04,0x07,0x00)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x02,0x02)
    device.ctrl_transfer(0x40,0x02,0x00,0x00)
    device.ctrl_transfer(0x40,0x03,0xc4,0x09)
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x03,0x1a,0x00)
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x04,0x08,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x02,0x00,0x00)
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x00,0x00,0x00)
    device.ctrl_transfer(0x40,0x04,0x08,0x00)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x02,0x00,0x00)
    device.ctrl_transfer(0x40,0x03,0x1a,0x00)
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x03,0x1a,0x00)
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x01,0x01,0x01)
    device.ctrl_transfer(0x40,0x04,0x08,0x00)
    device.ctrl_transfer(0x40,0x02,0x00,0x00)
    device.write(0x02,[67])
    device.write(0x02,[])
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.write(0x02,[228])
    device.write(0x02,[])
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x06,0x00,0x00)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x01)
    device.ctrl_transfer(0x40,0x01,0x00,0x02)

    while True:
        sleep(0.16)
        #device.ctrl_transfer(0,0x6,0,0)
        device.ctrl_transfer(0x40,0x06,0,0)
        try:
            data = device.read(0x81,0x40)
                               
            
            
            print data
            
        except:
            
            if endpoint.args == ('Operation timed out'):
                continue
        
        #sleep(sleepTime)
        
if __name__ == '__main__':
    main()
         
    
